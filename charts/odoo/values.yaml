## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## Enable diagnostic mode in the statefulset
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the the statefulset
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the the statefulset
  ##
  args:
    - infinity

## Bitnami Odoo image
## ref: https://hub.docker.com/r/bitnami/odoo/tags/
## @param image.registry Odoo image registry
## @param image.repository Odoo image repository
## @param image.tag Odoo image tag (immutable tags are recommended)
## @param image.digest Odoo image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy Odoo image pull policy
## @param image.pullSecrets Odoo image pull secrets
##
image:
  registry: docker.io
  repository: bitnami/odoo
  tag: 17.0.20240505-debian-12-r1
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Odoo Configuration parameters
## Odoo settings based on environment variables
## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo#environment-variables
##
envVars:
  BITNAMI_DEBUG: "false"
  ALLOW_EMPTY_PASSWORD: "no"
  ODOO_DATA_TO_PERSIST: "/opt/bitnami/addons /opt/bitnami/data"
  ODOO_DATABASE_HOST: '{{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}'
  ODOO_DATABASE_PORT_NUMBER: '5432'
  ODOO_DATABASE_NAME: '{{ .Values.postgresql.auth.username }}'
  ODOO_DATABASE_USER: '{{ .Values.postgresql.auth.database }}'
  ODOO_DATABASE_MAXCONN: '500'
  ODOO_EMAIL: user@example.com
  ODOO_SKIP_BOOTSTRAP: "yes"
  ODOO_LOAD_DEMO_DATA: "no"

  # Use these SMTP parameters only if necessary.
  # Instead recommended approach is to use the `mail` helm chart,
  # and configure the SMTP Server in relay mode.
  ODOO_SMTP_HOST: odoo-mail
  ODOO_SMTP_PORT_NUMBER: '25'
  # ODOO_SMTP_PROTOCOL: ''
  # ODOO_SMTP_USER: ''

  LIMIT_TIME_CPU: '90'
  LIMIT_TIME_REAL: '150'
  LIST_DB: 'False'
  LOG_DB: 'False'
  LOG_LEVEL: info
  LOG_HANDLER: "[':INFO']"
  SERVER_WIDE_MODULES: web
envVarsFrom:
  ODOO_DATABASE_PASSWORD:
    secretKeyRef:
      name: '{{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}'
      key: password
  # Donot modify ODOO_PASSWORD directly. Use odooPassword helm value.
  # Or use existingSecret helm value, if you want it to be taken from an existing secret.
  ODOO_PASSWORD:
    secretKeyRef:
      name: '{{ template "odoo.secretName" . }}'
      key: odoo-password

  # ODOO_SMTP_PASSWORD:
  #   secretKeyRef:
  #     name: ""
  #     key: ""

# To add custom config parameter to the following odoo conf file, use this.
# This add the value to the conf file directly.
#
# odooConfAddlParams:
#   my_param: my_value
#
# If you want to render var from env, use the following.
#
# odooConfAddlParams:
#   my_param: '{{SOME_ENV_VAR}}'
#
# envVarsFrom:
#   SOME_ENV_VAR:
#     secretKeyRef:
#       name: secret-name
#       key: key-in-secret
#
# To use the odoo.conf.tpl directly from the docker image, set this var to null.
#
# odooConfTpl: ""
#
odooConfTpl: |-
  [options]
  addons_path = {{ODOO_ADDONS_DIR}}
  admin_passwd = {{ODOO_PASSWORD}}
  ; csv_internal_sep = ,
  data_dir = {{ODOO_DATA_DIR}}
  db_host = {{ODOO_DATABASE_HOST}}
  db_maxconn = {{ODOO_DATABASE_MAXCONN}}
  db_name = {{ODOO_DATABASE_NAME}}
  db_password = {{ODOO_DATABASE_PASSWORD}}
  db_port = {{ODOO_DATABASE_PORT_NUMBER}}
  ; db_sslmode = prefer
  ; https://www.postgresql.org/docs/current/manage-ag-templatedbs.html
  db_template = template1
  db_user = {{ODOO_DATABASE_USER}}
  dbfilter = {{ODOO_DATABASE_FILTER}}
  debug_mode = False
  email_from = {{ODOO_EMAIL}}
  http_port = {{ODOO_PORT_NUMBER}}
  ; limit_memory_hard = 2684354560
  ; limit_memory_soft = 2147483648
  ; limit_request = 8192
  ; https://www.odoo.com/forum/help-1/question/cpu-time-limit-exceeded-how-to-solve-it-87922
  limit_time_cpu = {{LIMIT_TIME_CPU}}
  limit_time_real = {{LIMIT_TIME_REAL}}
  list_db = {{LIST_DB}}
  log_db = {{LOG_DB}}
  log_handler = {{LOG_HANDLER}}
  log_level = {{LOG_LEVEL}}
  ; logfile = {{ODOO_LOG_FILE}}
  longpolling_port = {{ODOO_LONGPOLLING_PORT_NUMBER}}
  ; https://www.odoo.com/es_ES/forum/ayuda-1/could-not-obtain-lock-on-row-in-relation-ir-cron-74519
  max_cron_threads = 1
  pidfile = {{ODOO_PID_FILE}}
  ; Odoo will always be running behind a proxy (e.g. Docker or Apache)
  proxy_mode = True
  ; osv_memory_age_limit = 1.0
  ; osv_memory_count_limit = False
  ; pg_path =
  ; To change the SMTP params, check above envVars section.
  ; smtp_password = False
  ; smtp_port = 25
  ; smtp_server = localhost
  ; smtp_ssl = False
  ; smtp_user = False
  ; without_demo = False
  ; workers = 0
  server_wide_modules = {{SERVER_WIDE_MODULES}}
odooConfAddlParams: {}

## @param odooPassword Odoo user password
## Defaults to a random 10-character alphanumeric string if not set
## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo#configuration
##
odooPassword: ""
## @param customPostInitScripts Custom post-init.d user scripts
## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo
## NOTE: supported formats are `.sh`, `.sql` or `.php`
## NOTE: scripts are exclusively executed during the 1st boot of the container
## e.g:
## customPostInitScripts:
##   enable-logs.sh: |
##     #!/bin/bash
##     sed -i s/;logfile/logfile/ /opt/bitnami/odoo/conf/odoo.conf
##     ...
##
customPostInitScripts: {}
## @param existingSecret Name of existing secret containing Odoo credentials
## NOTE: Must contain key `odoo-password`
## NOTE: When it's set, the `odooPassword` parameter is ignored
##
existingSecret: ""
## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []

## @section Odoo deployment parameters
##

## @param replicaCount Number of Odoo replicas to deploy
## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
##
replicaCount: 1
## Odoo container ports
## @param containerPorts.http Odoo HTTP container port
##
containerPorts:
  http: 8069
## Odoo containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resources limits for the Odoo container
## @param resources.requests [object] The requested resources for the Odoo container
##
resources:
  limits: {}
  requests:
    memory: 512Mi
    cpu: 300m
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Odoo pods' Security Context
## @param podSecurityContext.fsGroup Set Odoo pod's Security Context fsGroup
##
podSecurityContext:
  enabled: false
  fsGroup: 1001
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled Odoo containers' Security Context
## @param containerSecurityContext.runAsUser Set Odoo container's Security Context runAsUser
##
containerSecurityContext:
  enabled: false
  runAsUser: 1001
## Configure extra options for Odoo containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.path Path for to check for livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 600
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.path Path to check for readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## @param startupProbe.enabled Enable startupProbe
## @param startupProbe.path Path to check for startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  path: /
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
#
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
#
customStartupProbe: {}
## @param lifecycleHooks LifecycleHooks to set additional configuration at startup
##
lifecycleHooks: {}
## @param hostAliases Odoo pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param podLabels Extra labels for Odoo pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for Odoo pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []
## @param priorityClassName Odoo pods' Priority Class Name
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""
## @param schedulerName Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds Odoo pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param updateStrategy.type Odoo deployment strategy type
## @param updateStrategy.rollingUpdate Odoo deployment rolling update configuration parameters
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
## e.g:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
##
updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}
## @param extraVolumes Optionally specify extra list of additional volumes for Odoo pods
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Odoo container(s)
##
extraVolumeMounts: []
## @param extraContainerPorts Optionally specify extra list of additional ports for Odoo container(s)
## e.g:
## extraContainerPorts:
##   - name: longpolling
##     containerPort: 8072
##
extraContainerPorts: []
## @param sidecars Add additional sidecar containers to the Odoo pod
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the Odoo pods
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'copy addons from git and push to /bitnami/odoo/addons. Should work with extraVolumeMounts and extraVolumes']
##
initContainers: []

## @section Traffic Exposure Parameters
##

## Odoo service parameters
##
service:
  ## @param service.type Odoo service type
  ##
  type: ClusterIP
  ## @param service.ports.http Odoo service HTTP port
  ##
  ports:
    http: 80
  ## @param service.nodePorts.http NodePort for the Odoo HTTP endpoint
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/user-guide/services/
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}
  ## @param service.clusterIP Odoo service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Odoo service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges Odoo service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy Odoo service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for Odoo service
  ##
  annotations: {}
  ## @param service.extraPorts Extra port to expose on Odoo service
  ##
  extraPorts: []

## Configure the ingress resource that allows you to access the Odoo installation
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Odoo
  ##
  enabled: false
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record. Use global.hostname instead of this.
  ##
  hostname: ""
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.tls=true` and `ingress.certManager=false`
  ##
  tls: false
  ## @param ingress.tlsSecret Secret to use for TLS that contains TLS Certificate and Key
  ##
  tlsSecret: ""
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - odoo.local
  ##   secretName: odoo.local-tls
  ##
  extraTls: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Persistence Parameters
##

## Persistence Parameters
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.retentionPolicy.enabled
  ## @param persistence.retentionPolicy.whenDeleted
  ## @param persistence.retentionPolicy.whenScaled
  ##
  retentionPolicy:
    enabled: true
    whenDeleted: ""
    whenScaled: ""
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 4Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.annotations Annotations for the PVC
  ##
  annotations: {}
  ## @param persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the podSecurityContext/containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Init container's resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.enabled Enable init container's Security Context
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0

## @section RBAC Parameters

## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name The name of the ServiceAccount to create (name generated using common.names.fullname template otherwise)
## @param serviceAccount.automountServiceAccountToken Auto-mount the service account token in the pod
## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
##
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false
  annotations: {}

## @section Other Parameters
##

## Odoo Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
## @param pdb.create Enable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
##
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""

## Odoo Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable Horizontal POD autoscaling for Odoo
## @param autoscaling.minReplicas Minimum number of Odoo replicas
## @param autoscaling.maxReplicas Maximum number of Odoo replicas
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 11
  targetCPU: 50
  targetMemory: 50

## @section Database Parameters

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.auth.username Name for a custom user to create
## @param postgresql.auth.database Name for a custom database to create
## @param postgresql.primary.extendedConfiguration
##
postgresql:
  enabled: true
  auth:
    username: bn_odoo
    database: bitnami_odoo
  primary:
    extendedConfiguration: |-
      wal_level = logical
      max_wal_senders = 20
      max_replication_slots = 10

istio:
  enabled: false
  virtualservice:
    enabled: true
    host: ""
    gateway: "istio-system/all-hosts"
    redirectRootToWeb: true
    extraRoutes: []
  gateway:
    enabled: false
    host: ""
    ingressController:
      istio: ingressgateway
    httpTlsRedirect: true
    httpEnabled: true
    httpsEnabled: true
    tls:
      mode: SIMPLE
      credentialName: ""
    extraServers: []
