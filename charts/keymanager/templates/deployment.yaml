apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or .Values.podAnnotations .Values.metrics.enabled }}
      annotations: {{- include "keymanager.podAnnotations" . | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" (dict "customLabels" .Values.podLabels "context" $) | nindent 8 }}
    spec:
      serviceAccountName: {{ template "keymanager.serviceAccountName" . }}
      {{- include "keymanager.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if or (and .Values.postgresInit.enabled .Values.persistence.enabled) (and .Values.keygen.enabled .Values.persistence.enabled) .Values.initContainers }}
      initContainers:
        {{- if and .Values.postgresInit.enabled .Values.persistence.enabled }}
        - name: postgres-init
          image: {{ include "common.images.image" (dict "imageRoot" .Values.postgresInit.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.postgresInit.image.pullPolicy }}
          {{- include "keymanager.postgresInit.command" . | nindent 10 }}
          {{- if .Values.postgresInit.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.postgresInit.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            {{- include "keymanager.postgresInit.envVars" . | nindent 12 }}
          volumeMounts:
            {{- if and .Values.postgresInit.startUpCommand (not (or .Values.postgresInit.command .Values.postgresInit.args)) }}
            - name: postgres-init-conf
              mountPath: /startup.sh
              subPath: startup-command-sh
            {{- end }}
            {{- if .Values.postgresInit.keyPolicyDef.enabled }}
            - name: postgres-init-conf
              mountPath: {{ include "common.tplvalues.render" (dict "value" .Values.postgresInit.keyPolicyDef.mountPath "context" $) }}
              subPath: key-policy-def-csv
            {{- end }}
            - name: keymanager-data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.postgresInit.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.postgresInit.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- end }}
        {{- if and .Values.keygen.enabled .Values.persistence.enabled }}
        - name: keygen
          image: {{ include "common.images.image" (dict "imageRoot" .Values.keygen.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.keygen.image.pullPolicy }}
          {{- include "keymanager.keygen.command" . | nindent 10 }}
          {{- if .Values.keygen.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.keygen.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            {{- include "keymanager.keygen.envVars" . | nindent 12 }}
          volumeMounts:
            {{- if and .Values.keygen.startUpCommand (not (or .Values.keygen.command .Values.keygen.args)) }}
            - name: keygen-conf
              mountPath: /startup.sh
              subPath: startup-command-sh
            {{- end }}
            {{- if and .Values.springConfig.rawConfig (not .Values.springConfig.gitRepo.enabled) }}
            - name: spring-config
              mountPath: {{ include "common.tplvalues.render" (dict "value" .Values.springConfig.rawConfigMountPath "context" $) }}
              subPath: application.properties
            {{- end }}
            - name: keymanager-data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.keygen.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.keygen.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- end }}
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: keymanager
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- include "keymanager.command" . | nindent 10 }}
          env:
            {{- include "keymanager.envVars" . | nindent 12 }}
          ports:
            - name: spring-service
              containerPort: {{ .Values.springServicePort }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if and .Values.startUpCommand (not (or .Values.command .Values.args)) }}
            - name: startup-command
              mountPath: /startup.sh
              subPath: startup.sh
            {{- end }}
            {{- if and .Values.springConfig.rawConfig (not .Values.springConfig.gitRepo.enabled) }}
            - name: spring-config
              mountPath: {{ include "common.tplvalues.render" (dict "value" .Values.springConfig.rawConfigMountPath "context" $) }}
              subPath: application.properties
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: keymanager-data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if and .Values.startUpCommand (not (or .Values.command .Values.args)) }}
        - name: startup-command
          configMap:
            name: {{ template "common.names.fullname" . }}-startup
            defaultMode: 0755
        {{- end }}
        {{- if and .Values.springConfig.rawConfig (not .Values.springConfig.gitRepo.enabled) }}
        - name: spring-config
          configMap:
            name: {{ template "common.names.fullname" . }}-spring-config
        {{- end }}
        {{- if .Values.persistence.enabled }}
        {{- if or .Values.postgresInit.keyPolicyDef.enabled (and .Values.postgresInit.startUpCommand (not (or .Values.postgresInit.command .Values.postgresInit.args))) }}
        - name: postgres-init-conf
          configMap:
            name: {{ include "common.names.fullname" . }}-postgres-init
            defaultMode: 0755
        {{- end }}
        {{- if and .Values.keygen.startUpCommand (not (or .Values.keygen.command .Values.keygen.args)) }}
        - name: keygen-conf
          configMap:
            name: {{ include "common.names.fullname" . }}-keygen
            defaultMode: 0755
        {{- end }}
        - name: keymanager-data
          persistentVolumeClaim:
            claimName: {{ (tpl .Values.persistence.existingClaim $) | default (include "common.names.fullname" .) }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
