{{- if and .Values.postgresInit.enabled (not .Values.persistence.enabled) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "common.names.fullname" . }}-postgres-init
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $) | nindent 4 }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.postgresInit.commonAnnotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.postgresInit.commonAnnotations "context" $) | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.postgresInit.backoffLimit }}
  backoffLimit: {{ .Values.postgresInit.backoffLimit }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "common.names.fullname" . }}-postgres-init
        app.kubernetes.io/instance: {{ .Release.Name }}
        sidecar.istio.io/inject: "false"
    spec:
      {{- include "keymanager.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "keymanager.serviceAccountName" . }}
      {{- if .Values.postgresInit.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.postgresInit.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: postgres-init
          image: {{ include "common.images.image" (dict "imageRoot" .Values.postgresInit.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.postgresInit.image.pullPolicy }}
          {{- include "keymanager.postgresInit.command" . | nindent 10 }}
          {{- if .Values.postgresInit.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.postgresInit.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            {{- include "keymanager.postgresInit.envVars" . | nindent 12 }}
          volumeMounts:
            {{- if and .Values.postgresInit.startUpCommand (not (or .Values.postgresInit.command .Values.postgresInit.args)) }}
            - name: postgres-init-conf
              mountPath: /startup.sh
              subPath: startup-command-sh
            {{- end }}
            {{- if .Values.postgresInit.keyPolicyDef.enabled }}
            - name: postgres-init-conf
              mountPath: {{ include "common.tplvalues.render" (dict "value" .Values.postgresInit.keyPolicyDef.mountPath "context" $) }}
              subPath: key-policy-def-csv
            {{- end }}
            {{- if .Values.postgresInit.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.postgresInit.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        {{- if or .Values.postgresInit.keyPolicyDef.enabled (and .Values.postgresInit.startUpCommand (not (or .Values.postgresInit.command .Values.postgresInit.args))) }}
        - name: postgres-init-conf
          configMap:
            name: {{ include "common.names.fullname" . }}-postgres-init
            defaultMode: 0755
        {{- end }}
        {{- if .Values.postgresInit.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.postgresInit.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
