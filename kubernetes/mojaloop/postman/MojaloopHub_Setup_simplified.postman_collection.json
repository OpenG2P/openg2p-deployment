{
	"info": {
		"_postman_id": "6665054b-ce2a-48df-881d-d979833a504b",
		"name": "MojaloopHub_Setup_simplified",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30017727"
	},
	"item": [
		{
			"name": "Hub Account",
			"item": [
				{
					"name": "Add Hub Account-HUB_MULTILATERAL_SETTLEMENT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "FSPIOP-Source",
								"type": "text",
								"value": "hub_operator"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"HUB_MULTILATERAL_SETTLEMENT\",\n  \"currency\": \"{{currency}}\"\n}"
						},
						"url": {
							"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/accounts",
							"host": [
								"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
							],
							"path": [
								"participants",
								"Hub",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Hub Account-HUB_RECONCILIATION",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "FSPIOP-Source",
								"value": "hub_operator",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"HUB_RECONCILIATION\",\n  \"currency\": \"{{currency}}\"\n}"
						},
						"url": {
							"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/accounts",
							"host": [
								"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
							],
							"path": [
								"participants",
								"Hub",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hub Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "FSPIOP-Source",
								"value": "hub_operator",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
						},
						"url": {
							"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/endpoints",
							"host": [
								"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
							],
							"path": [
								"participants",
								"Hub",
								"endpoints"
							]
						},
						"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
					},
					"response": []
				},
				{
					"name": "Hub Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "FSPIOP-Source",
								"value": "hub_operator",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
						},
						"url": {
							"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/endpoints",
							"host": [
								"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
							],
							"path": [
								"participants",
								"Hub",
								"endpoints"
							]
						},
						"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
					},
					"response": []
				},
				{
					"name": "Hub Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "FSPIOP-Source",
								"value": "hub_operator",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
						},
						"url": {
							"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/endpoints",
							"host": [
								"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
							],
							"path": [
								"participants",
								"Hub",
								"endpoints"
							]
						},
						"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Settlement Models",
			"item": [
				{
					"name": "Create settlement model DEFERREDNET",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "FSPIOP-Source",
								"value": "{{hub_operator}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"DEFERREDNET\",\n  \"settlementGranularity\": \"NET\",\n  \"settlementInterchange\": \"MULTILATERAL\",\n  \"settlementDelay\": \"DEFERRED\",\n  \"requireLiquidityCheck\": true,\n  \"ledgerAccountType\": \"POSITION\",\n  \"autoPositionReset\": true,\n  \"currency\": \"{{currency}}\",\n  \"settlementAccountType\": \"SETTLEMENT\"\n}"
						},
						"url": {
							"raw": "{{HOST_CENTRAL_LEDGER}}/settlementModels",
							"host": [
								"{{HOST_CENTRAL_LEDGER}}"
							],
							"path": [
								"settlementModels"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Oracle Onboarding",
			"item": [
				{
					"name": "Register MSISDN Oracle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"MSISDN\",\n  \"endpoint\": {\n    \"value\": \"http://ml-oracle-msisdn-als-oracle-pathfinder/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"{{currency}}\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register IBAN Oracle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"IBAN\",\n  \"endpoint\": {\n    \"value\": \"http://ml-oracle-iban-simulator/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"{{currency}}\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register PERSONAL_ID Oracle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"PERSONAL_ID\",\n  \"endpoint\": {\n    \"value\": \"http://ml-oracle-personalid-simulator/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"{{currency}}\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register ACCOUNT_ID Oracle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"ACCOUNT_ID\",\n  \"endpoint\": {\n    \"value\": \"http://spar-social-payments-account-registry.spar/internal/mojaloop\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"{{currency}}\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register ALIAS Oracle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"ALIAS\",\n  \"endpoint\": {\n    \"value\": \"http://ml-oracle-alias-simulator/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"{{currency}}\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all oracles",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FSP Onboarding",
			"item": [
				{
					"name": "payerfsp",
					"item": [
						{
							"name": "account",
							"item": [
								{
									"name": "Add payerfsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"dfsp1\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - payerfsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 1000000000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds in Settlement Account - Payerfsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 2000000000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/dfsp1/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"payerfspSettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"setTimeout(function () {",
													"    const payerfspGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payerfsp\")+'/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(payerfspGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var payerfspSettlementAccountBalanceAfterFundsIn",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"                payerfspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var payerfspExpectedBalance = pm.environment.get('payerfspSettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"        pm.test(\"Final Payerfsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"            pm.expect(payerfspSettlementAccountBalanceAfterFundsIn).to.eql(payerfspExpectedBalance);",
													"          });    ",
													"    ",
													"    });",
													"    ",
													"    const hubGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var currentHubReconAccountBalance",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"                hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"        console.log(hubExpectedBalance)",
													"        pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"          });  ",
													"    });",
													"}, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/accounts/{{payerfspSettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"accounts",
												"{{payerfspSettlementAccountId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds in Settlement Account - Payerfsp Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/accounts",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"accounts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": " callbacks",
							"item": [
								{
									"name": "Add payerfsp callback - AUTHORIZATIONS",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_AUTHORIZATIONS\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TXN REQUEST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - BULK-TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_POST\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/bulkTransfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - BULK-TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/bulkTransfers/{{id}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get payerfsp callbacks",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp1-scheme-adapter:4000/bulkTransfers/{{id}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - BULK-TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp1",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "payeefsp",
					"item": [
						{
							"name": "accounts",
							"item": [
								{
									"name": "Add payeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"dfsp2\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - payeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 1000000000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds - Payeefsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 2000000000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/dfsp2/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"payeefspSettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"setTimeout(function () {",
													"    const payeefspGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payeefsp\")+'/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(payeefspGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var payeefspSettlementAccountBalanceAfterFundsIn",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"                payeefspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var payeefspExpectedBalance = pm.environment.get('payeefspSettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"        pm.test(\"Final Payeefsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"            pm.expect(payeefspSettlementAccountBalanceAfterFundsIn).to.eql(payeefspExpectedBalance);",
													"          });    ",
													"    ",
													"    });",
													"    ",
													"    const hubGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var currentHubReconAccountBalance",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"                hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"        console.log(hubExpectedBalance)",
													"        pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"          });  ",
													"    });",
													"}, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/accounts/{{payeefspSettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"accounts",
												"{{payeefspSettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "##Author: Sridevi Miriyala##"
						},
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Add payeefsp callback - AUTHORIZATIONS",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_AUTHORIZATIONS\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TXN REQUEST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_POST\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/bulkTransfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_PUT\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/bulkTransfers/{{id}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get payeefsp callbacks",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_ERROR\",\n  \"value\": \"http://ml-simulators-sim-dfsp2-scheme-adapter:4000/bulkTransfers/{{id}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/dfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"dfsp2",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "walletfsp",
					"item": [
						{
							"name": "accounts",
							"item": [
								{
									"name": "Add payeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"testingtoolkitdfsp\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - payeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 1000000000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds - Payeefsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 2000000000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testingtoolkitdfsp/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"walletfspSettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"setTimeout(function () {",
													"    const payeefspGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payeefsp\")+'/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(payeefspGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var payeefspSettlementAccountBalanceAfterFundsIn",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"                payeefspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var payeefspExpectedBalance = pm.environment.get('payeefspSettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"        pm.test(\"Final Payeefsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"            pm.expect(payeefspSettlementAccountBalanceAfterFundsIn).to.eql(payeefspExpectedBalance);",
													"          });    ",
													"    ",
													"    });",
													"    ",
													"    const hubGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var currentHubReconAccountBalance",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"                hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"        console.log(hubExpectedBalance)",
													"        pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"          });  ",
													"    });",
													"}, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/accounts/{{walletfspSettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"accounts",
												"{{walletfspSettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "##Author: Sridevi Miriyala##"
						},
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Add payeefsp callback - AUTHORIZATIONS",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_AUTHORIZATIONS\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TXN REQUEST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_POST\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/bulkTransfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_PUT\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/bulkTransfers/{{id}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get payeefsp callbacks",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_ERROR\",\n  \"value\": \"http://ml-ttk-ml-testing-toolkit-backend:4040/bulkTransfers/{{id}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"{{ADMIN_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testingtoolkitdfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testingtoolkitdfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (pm.environment.get('WS02_OAUTH_ENABLED') === 'true') {",
					"",
					"    // Get Token for Hub Operator",
					"    let authHeader = btoa(`${pm.environment.get('HUB_OPERATOR_CONSUMER_KEY')}:${pm.environment.get('HUB_OPERATOR_CONSUMER_SECRET')}`);",
					"    let getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('HUB_OPERATOR_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Payerfsp",
					"    authHeader = btoa(`${pm.environment.get('PAYERFSP_CONSUMER_KEY')}:${pm.environment.get('PAYERFSP_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('PAYERFSP_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Payeefsp",
					"    authHeader = btoa(`${pm.environment.get('PAYEEFSP_CONSUMER_KEY')}:${pm.environment.get('PAYEEFSP_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('PAYEEFSP_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp1",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP1_CONSUMER_KEY')}:${pm.environment.get('TESTFSP1_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP1_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp2",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP2_CONSUMER_KEY')}:${pm.environment.get('TESTFSP2_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP2_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp3",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP3_CONSUMER_KEY')}:${pm.environment.get('TESTFSP3_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP3_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"      // Get Token for SIM1",
					"    authHeader = btoa(`${pm.environment.get('SIM1_CONSUMER_KEY')}:${pm.environment.get('SIM1_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM1_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"    // Get Token for SIM2",
					"    authHeader = btoa(`${pm.environment.get('SIM2_CONSUMER_KEY')}:${pm.environment.get('SIM2_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM2_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for SIM3",
					"    authHeader = btoa(`${pm.environment.get('SIM3_CONSUMER_KEY')}:${pm.environment.get('SIM3_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM3_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp4",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP4_CONSUMER_KEY')}:${pm.environment.get('TESTFSP4_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP4_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for SIM4",
					"    authHeader = btoa(`${pm.environment.get('SIM4_CONSUMER_KEY')}:${pm.environment.get('SIM4_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM4_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"}",
					"",
					"if(!pm.environment.get('jrsassign')) {",
					"    pm.sendRequest('http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js', function (err, response) {",
					"        pm.environment.set('jrsassign', response.text());",
					"    });",
					"}",
					"",
					"// Get Token for Gmail API",
					"let getGoogleTokenRequest = {",
					"    url: 'https://oauth2.googleapis.com/token',",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/x-www-form-urlencoded',",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: \"client_id\", value: pm.environment.get(\"GOOGLE_CLIENT_ID\") },",
					"            { key: \"client_secret\", value: pm.environment.get(\"GOOGLE_CLIENT_SECRET\") },",
					"            { key: \"grant_type\", value: \"refresh_token\" },",
					"            { key: \"refresh_token\", value: pm.environment.get(\"GOOGLE_REFRESH_TOKEN\") }",
					"        ]",
					"    }",
					"};",
					"pm.sendRequest(getGoogleTokenRequest, function (err, response) {",
					"    const jsonData = response.json();",
					"    pm.environment.set('googleServisesAccessToken', jsonData.access_token);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}